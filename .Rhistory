.get_config_path()
.get_config_path("PAPALEXI_2021_DATA_DIR")
.get_config_path("PAPALEXI_2021_DIR")
.get_config_path("LOCAL_PAPALEXI_2021")
.get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offset <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offset <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
papalexi_offsite
schraivogel_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
papalexi_offsite
paste0(papalexi_offsite, "processed/expression_matrix.odm")
paste0(papalexi_offsite, "processed/metadata.rds")
data_list <- list(
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
)
data_list
data_list$papalexi
data_list$papalexi[["gene_odm_fp"]]
file.exists(data_list$papalexi[["gene_odm_fp"]])
data_list <- list(
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
)
data_list
unlist(data_list)
for (fp in data_list) file.exists(fp)
for (fp in data_list) print(file.exists(fp))
schraivogel_offsite
schraivogel_offsite
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/metadata.rds"))
)
schraivogel
data_list
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped_metadata.rds"))
)
data_list
unlist(data_list)
for (f in unlist(data_list)) print(file.exists(f))
schraivogel_offsite
paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm")
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_offsite_2021_DATA_DIR")
schraivogel_offsite
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
schraivogel_offsite
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped_metadata.rds"))
)
data_list
for (f in unlist(data_list)) print(file.exists(f))
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/raw_ungrouped_metadata.rds"))
)
for (f in unlist(data_list)) print(file.exists(f))
paste0(schraivogel_offsite, "processed/ground_truth_tapseq/expression_matrix.odm")
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped_metadata.rds"))
)
data_list$schraivogel
data_list$schraivogel["gene_odm_fp"]
data_list$schraivogel["gene_metadata_fp"]
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# create a list; each element of the list contains:
# (i) gene_odm_fp,
# (ii) gene_metadata_fp,
# (iii) gRNA_odm_fp,
# (iv) gRNA_metadata_fp
data_list <- list(
# Papalexi
papalexi = c(gene_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(papalexi_offsite, "processed/gene/metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds")),
# Schraivogel
schraivogel = c(gene_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
gene_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped_metadata.rds"))
)
for (f in unlist(data_list)) print(file.exists(f))
data_list
dataset_name <- "papalexi"
data_list
data_list[[dataset_name]]
data_list[[dataset_name]][c("gRNA_odm_fp", "gRNA_metadata_fp")]
gRNA_fps <- data_list[[dataset_name]][c("gRNA_odm_fp", "gRNA_metadata_fp")]
gRNA_fps
gRNA_fps
gRNA_fps
gRNA_metadata <- data_list[[dataset_name]]["gRNA_metadata_fp"]
readRDS(gRNA_fps)
gRNA_metadata <- data_list[[dataset_name]]["gRNA_metadata_fp"]
gRNA_metadata
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
gRNA_metadata
readRDS(gRNA_fps)
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
gRNA_metadata
file.exists(gRNA_metadata)
readRDS(gRNA_metadata)
x <- readRDS(gRNA_metadata)
x
x$feature_covariates |> head()
x$feature_covariates$target_type |> table()
x$feature_covariates |> dplyr::filter(target_type == "non-targeting")
x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
dataset_name
x <- readRDS(gRNA_metadata)
x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
x <- readRDS(gRNA_metadata)
ntc_names <- x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
ntc_names
paste0(dataset_name, "," ntc_names)
dataset_name
paste0(dataset_name, ",", ntc_names)
paste0(dataset_name, " ,", ntc_names)
paste0(dataset_name, ", ", ntc_names)
paste0("[", dataset_name, ", ", ntc_names, "]")
paste0("[", dataset_name, ", ", ntc_names, "]", collapse = "\n")
data_file
data)list
data_list
out <- ""
names(data_list)
paste0("[", dataset_name, ", ", ntc_names, "]", collapse = "\n")
paste0("[", dataset_name, ", ", ntc_names, "]")
out <- ""
out <- ""
for (dataset_name in names(data_list)) {
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
x <- readRDS(gRNA_metadata)
ntc_names <- x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
out <- c(out, paste0("[", dataset_name, ", ", ntc_names, "]"))
}
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
gRNA_metadata
x
dataset_name
x$feature_covariates |> head()
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
x <- readRDS(gRNA_metadata)
x$feature_covariates |> head()
ntc_names <- x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
ntc_names
for (dataset_name in names(data_list)) {
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
x <- readRDS(gRNA_metadata)
ntc_names <- x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
out <- c(out, paste0("[", dataset_name, ", ", ntc_names, "]"))
}
out
out <- NULL
for (dataset_name in names(data_list)) {
gRNA_metadata <- data_list[[dataset_name]][["gRNA_metadata_fp"]]
x <- readRDS(gRNA_metadata)
ntc_names <- x$feature_covariates |>
dplyr::filter(target_type == "non-targeting") |>
row.names()
out <- c(out, paste0("[", dataset_name, ", ", ntc_names, "]"))
}
out
cat(paste0(out, collapse = "\n"))
getwd()
source("data_file.R")
library(ondisc)
# load the data fps
source(data_file)
data_file <- "data_file.R"
# load the data fps
source(data_file)
# Load packages
library(ondisc)
data_file
dataset_name
dataset_name <- "papalexi"
ntc_name <- "NTg9"
data_file
args
data_file
data_list
dataset_name
# load gene expression matrix and gRNA expression matrix
data_list[[dataset_name]]
# load gene expression matrix and gRNA expression matrix
curr_fps <- data_list[[dataset_name]]
curr_fps
curr_fps
curr_fps["gene_odm_fp"]
curr_fps[["gene_odm_fp"]]
gene_odm <- read_odm(odm_fp = curr_fps[["gene_odm_fp"]],
metadata_fp = curr_fps[["gene_metadata_fp"]])
gene_odm
gRNA_odm <- read_odm(odm_fp = curr_fps[["gRNA_odm_fp"]],
metadata_fp = curr_fps[["gRNA_metadata_fp"]])
gRNA_odm
gene_odm
data_file
ntc_name
gene_odm
gRNA_odm
gRNA_odm
# load the gRNA counts
gRNA_mat <- gRNA_odm[[]]
# load the gRNA counts
gRNA_mat <- gRNA_odm[[seq(1, nrow(gRNA_odm)),]]
gRNA_mat
dim(gRNA_mat)
row.names(gRNA_mat)
row.names(gRNA_mat) <- get_feature_ids(gRNA_odm)
gRNA_mat[1:5,1:5]
gRNA_metadata <- get_feature_covariates(gRNA_mat)
gRNA_metadata <- get_feature_covariates(gRNA_odm)
head(gRNA_metadata)
gRNA_metadata <- get_feature_covariates(gRNA_odm) |> select(-mean_expression, -coef_of_variation, -n_nonzero)
gRNA_metadata <- get_feature_covariates(gRNA_odm) |>
dplyr::select(-mean_expression, -coef_of_variation, -n_nonzero)
gRNA_metadata
dataset_name <- "schraivogel"
# read gene expression matrix and gRNA expression matrix
curr_fps <- data_list[[dataset_name]]
gene_odm <- read_odm(odm_fp = curr_fps[["gene_odm_fp"]],
metadata_fp = curr_fps[["gene_metadata_fp"]])
gRNA_odm <- read_odm(odm_fp = curr_fps[["gRNA_odm_fp"]],
metadata_fp = curr_fps[["gRNA_metadata_fp"]])
# load the gRNA counts
gRNA_mat <- gRNA_odm[[seq(1, nrow(gRNA_odm)),]]
row.names(gRNA_mat) <- get_feature_ids(gRNA_odm)
gRNA_metadata <- get_feature_covariates(gRNA_odm) |>
dplyr::select(-mean_expression, -coef_of_variation, -n_nonzero)
head(gRNA_metadata)
gRNA_metadata$target_type |> table()
